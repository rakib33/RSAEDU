@model IEnumerable<RSAEDU.Models.ExamResult>

@{
    ViewBag.Title = "Index";
    int i = 0;

    var Type = Model.FirstOrDefault();

    decimal total = 0;
}


@if (ViewBag.message != null && ViewBag.ok == "ok")
{
<div class="alert alert-success">
    <strong>Success!</strong> @Html.Raw(ViewBag.message)
</div>
}
else if (ViewBag.message != null && !string.IsNullOrEmpty(ViewBag.message))
{
    <div class="alert alert-danger">
        <strong>Failed!</strong> @Html.Raw(ViewBag.message)
    </div>
}



<div class="container py-2">
    <div class="row">
        <div class="col-md-12">
            <div class="row">
                <div class="col-md-12 col-sm-12 mx-auto">
                    <!-- form card login -->
                    <div class="card rounded-0">
                        <div class="card-header">
                            <h5 class="mb-0">Exam Result Processing List</h5>
                        </div>
                        <div class="card-body">                          
                            @using (Html.BeginForm("", "", FormMethod.Get)) //Index,ExamResult
                            {
                         
                                <div class="row margin-top-05">
                     
                                <label class="col-sm-2 pull-left text-center">Exam Name</label>
                                <div class="col-sm-4">
                                    @Html.DropDownList("ExamId", (IEnumerable<SelectListItem>)ViewBag.ExamId, "Select Exam", new { @class = "form-control", @required = "required" })
                                </div>

                                <label class="col-sm-2 pull-left text-center">Department Name</label>
                                <div class="col-sm-4">
                                    @Html.DropDownList("DeparmentId", (IEnumerable<SelectListItem>)ViewBag.Faculty, "Select Department", new { @class = "form-control", @required = "required" })

                                </div>
                            </div>
                           
                            <div class="row margin-top-05">
                                <label class="col-sm-2 pull-left text-center">Subject Name</label>
                                <div class="col-sm-4">
                                    <select id="Subject" name="Subject" class="form-control" required></select>
                                </div>
                                <label class="col-sm-2 pull-left text-center">Mark Status</label>
                                <div class="col-sm-4">
                                    @Html.DropDownList("MarkOption", new List<SelectListItem>
                                      {
                                        new SelectListItem() {Text = "Marked", Value="M"},
                                        new SelectListItem() {Text = "UnMarked", Value="U"}                               
                                     }, "Select Status", new { @class = "form-control", @required = "required" })
                            
                                </div>
                            </div>
                                                                
                             <div class="row margin-top-05">
                                <label class="col-sm-2 pull-left text-center">From Roll</label>
                                <div class="col-sm-4">
                                    <input type="number" class="form-control pull-left txt-hight-30" name="fromRoll" id="fromRoll" />
                                </div>
                                <label class="col-sm-2 pull-left text-center">To Roll</label>
                                <div class="col-sm-4">
                                    <input type="number" class="form-control pull-left txt-hight-30" name="toRoll" id="toRoll" />
                                </div>
                            </div>
                                
                        <div class="row margin-top-05">                      
                     
                        <label class="col-sm-2 pull-left text-center"></label>
                        <div class="col-sm-4">
                            <a class="btn btn-primary" href="@Url.Action("Create", "ExamResult")"><span><i class="fa fa-plus"></i></span>Add Result</a>                           
                        </div>
                        <label class="col-sm-2 pull-left text-center"></label>
                        <div class="col-sm-1">
                            <button id="submit" class="btn btn-success pull-left">Show</button>
                        </div>
                        <div class="col-sm-3">
                           <div id="load" style="display: none">
                               <img src="~/Resources/loading.gif" height="60" />
                           </div>
                        </div>
                     </div>
                  }      
                           
                          
                        </div>
                        <!--/card-block-->
                    </div>
                    <!-- /form card login -->
                </div>

            </div>
            <!--/row-->
        </div>
        <!--/col-->
    </div>
    <!--/row-->
</div>


  <div id="bredcum" class="row">
    <label></label>
  </div>
  


<div id="dtableAttendence" class="row margin-top-05">
</div>
    @*@if (Model.Count() > 0)
    {

        <div class="row margin-top-05">

            <table class="table table-striped table-bordered table-hover dt-responsive nowrap">
                <tr>
                    <th>
                        Sl No
                    </th>

                    <th>
                        Student Id
                    </th>
                    <th>
                        Student Name
                    </th>

                    <th>Roll No</th>


                    @foreach (var t in Model.FirstOrDefault().ResultType.ToList())
            {
            <th>
                @t.ExamTypeName
            </th>
            }

                    <th>
                        Total
                    </th>
                </tr>

                @foreach (var item in Model)
        {
            i++;
            total = 0;
        <tr>
            <td>@i</td>
            <td>
                @Html.DisplayFor(modelItem => item.StudentId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StudentName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RollNo)
            </td>

            @foreach(var type in item.ResultType){
                    total += type.MarksObtain;
                <td>
                    @type.MarksObtain
                </td>
                }
            <td>
                @total
            </td>
        </tr>
        }

            </table>

        </div>

    }*@
    
<script src="~/Scripts/app/exam-result.js"></script>

    @*<script>

        $("#ExamId").change(function () {
            $("#Subject").empty();
        });

        $("#DeparmentId").change(function () {

            $("#Subject").empty();

            var depId = $("#DeparmentId").val();

            if (depId == '' || depId == null || isNaN(depId)) {

                alert('Please select a Department');
            } else {

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("LoadSubject", "ExamResult")', //'/Home/LoadSubject',

                    dataType: 'json',

                    data: { depId: $("#DeparmentId").val() },


                    success: function (data) {

                        console.log(data.msg);
                        if (data.msg === 'Ok') {
                            //add initial option
                            $("#Subject").append('<option value="">Select Subject</option>');
                            $.each(data.list, function (i, state) {
                                $("#Subject").append('<option value="' + state.Id + '">' +
                                     state.SubjectName + '</option>');
                                //alert('Success');

                            });
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve subject.' + ex);
                    }
                });
            }
            return false;
        })

    </script>*@
